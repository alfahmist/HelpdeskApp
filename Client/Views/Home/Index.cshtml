@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Home Page";
    var clientId = @ViewData["empId"] as string;
}
<div class="form-row mb-3">
    <label for="empId">Ticket Name</label>
    <input type="hidden" class="form-control" id="empId" aria-describedby="emailHelp" placeholder="empId">
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">DataTable with minimal features & hover style</h3>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="example2" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            @*<th>No</th>*@
                            <th scope="col">TicketID</th>
                            <th scope="col">TicketName</th>
                            <th scope="col">RequestorName</th>
                            <th scope="col">TicketDate</th>
                            <th scope="col">TicketStatus</th>
                            <th scope="col">StatusDate</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    @*<tfoot>
                            <tr>
                                <th>Rendering engine</th>
                                <th>Browser</th>
                                <th>Platform(s)</th>
                                <th>Engine version</th>
                                <th>CSS grade</th>
                            </tr>
                        </tfoot>*@
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->


    </div>
    <!-- /.col -->
</div>
<!-- /.row -->

@section Scripts {


    <script>

        var clientID = `@ViewData["empId"]`;
        $(document).ready(function () {
            $('#exampleModalCenter').on('hidden.bs.modal', function () {
                ModalClear();
                //remove validation modal is closed
                ClearValidation();
            });

            FormValidation();
                var clientID = `@ViewData["empId"]`;
                $('#example2').DataTable({
                    ajax: {
                    
                        url: '/Ticket/LatestStatusByClientId/',
                        type: "Get",
                        data: { "clientID": clientID },
                        dataSrc: ""
                    },
                    columns: [
                        { "data": "ticketID" },
                        { "data": "ticketName" },
                        { "data": "requestorName" },
                        {
                            "data": "ticketDate",
                            render: function (data, type, row) {
                                let date = moment(row.ticketDate).format('DD MMMM YYYY HH:mm:ss')
                                return date
                            }
                        },
                        { "data": "ticketStatus" },
                        {
                            "data": "statusDate",
                            render: function (data, type, row) {
                                let dates = moment(row.statusDate).format('DD MMMM YYYY HH:mm:ss')
                                return dates
                            }
                        },
                        {
                            data: null,
                            render: function (row) {
                                return '<button onclick="CloseTicket(\'' + row['ticketID'] + '\')" class="btn btn-danger" style="margin-right : 5px;" title="Close"><i class="fas fa-check-circle"></i></button>';
                            },
                            orderable: false,
                            searchable: false
                        },
                    ]
                });
            });
    
        
        
        function GetTicket(id) {
            console.log(id);
            $.ajax({
                type: 'GET',
                url: `Home/GetTicketID/${id}`,
            }).done((result) => {
                $("#ticketId").val(result.ticketID)
            }).fail((error) => {
                console.log(error);
            })
        }

        $("#buttonCloseTicket").click(function () {
            CloseTicket();
            $("#closeTicketModal").hide();
        });

        

        let CloseTicket = (ticketId) => {
            swal({
                title: "Are you sure?",
                text: "Once closed, you will not be able to make the status to close!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willCloseTicket) => {
                if (willCloseTicket) {
                    $.ajax({
                        url: `/Ticket/UpdateStatusTicket`,
                        type: "POST",
                        data: { "ticketId": ticketId },
                        success: (data) => {
                            console.log(data);
                            if (data == 200) {
                                //$("#modalDelete").modal('hide');
                                swal("Poof! you already closed the ticket!", {
                                    icon: "success",
                                }).then(() => { location.reload() })

                            }
                            else {
                                swal({
                                    title: "Error",
                                    text: "Can't update ticket status",
                                    icon: "warning",
                                    buttons: true,
                                    dangerMode: true
                                }).then(() => {
                                    $('#closeTicketModal').clear();
                                    $('#closeTicketModal').ajax.reload();
                                })
                            }
                        }
                    })
                }
            })
        }

        $("#buttonCloseTicket").click(function () {
            AddTicket();
            $("#closeTicketModal").hide();
        });


        $("#buttonModal").click(function (e) {
            AddTicket();
            e.preventDefault();
            e.stopPropagation();

        });
        
        function AddTicket() {
            var Ticket = new Object();
            Ticket.TicketName = $("#ticketName").val();
            Ticket.ClientId = $("#clientId").val();
            Ticket.CategoriesId = $("#CategoriesId").val();
            Ticket.Subject = $("#Subject").val();
            Ticket.Message = $("#Message").val();
            $.ajax({
                url: 'Home/CreateTicket',
                type: 'POST',
                data: Ticket,
            }).done((result) => {
                if (result == 200) {
                    swal(
                        {
                            title: "Success!",
                            text: "Data added to Database !",
                            icon: "success"
                        }).then(() => { location.reload() })
                }
            }).fail((error) => {
                console.log(error);
                alert("Failed to Insert");
            })
        }

        function TicketSolution() {
            var Ticket = new Object();
            Ticket.TicketId = $("#TicketId").val();
            Ticket.EmployeeId = $("#EmployeeId").val();
            Ticket.Solution = $("#Solution").val();
            $.ajax({
                url: 'Home/TicketSolution',
                type: 'POST',
                data: Ticket,
            }).done((result) => {
                if (result == 200) {
                    swal(
                        {
                            title: "Success!",
                            text: "Data added to Database !",
                            icon: "success"
                        }).then(() => { location.reload() })
                }
            }).fail((error) => {
                console.log(error);
                alert("Failed to Insert");
            })
        }

        var ClearValidation = () => {
            var forms = document.getElementsByClassName('needs-validation modal-validation');
            Array.prototype.filter.call(forms, function (form) {
                form.classList.remove('was-validated');
            });
        }
        var FormValidation = () => {
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }
    </script>
}