@using Client.ViewModels
@{
    Layout = "/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Detail";
    var ticketID = @ViewData["ticketID"] as string;

}
<div class="container">

<div class="form-row my-3">
    <div class="col-sm-3">
        <div class="card">
            <div class="card-header">
                Ticket Information @ViewData["ticketID"]
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <p class="text-muted mb-0">Author</p>
                    <p class="mb-2"><strong id="Author"></strong></p>
                    <p class="text-muted mb-0" ">Created Time</p>
                    <p class="mb-2"><strong id="CreatedDate"></strong></p>
                </li>
                <li class="list-group-item">
                    <p class="text-muted mb-0">Category</p>
                    <p class="mb-2"> <strong id="Category"></strong></p>
                    <hr />
                    <p class="text-muted mb-0">Status</p>
                    <strong id="TicketStatus" class="mb-2"></strong>
                </li>
            </ul>
        </div>

        <div class="card">
            <div class="card-header">
                Assign For
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <select class="form-control" id="inputRole">
                        <option value="" disabled selected>Select Role</option>
                        <option value="EMP24">Budi    | Customer Support</option>
                        <option value="EMP25">Rizaldi | Technical Support</option>
                        <option value="EMP26">Judika  | Advance Support</option>
                    </select>
                    <button class="btn btn-danger mt-2" onclick="Cancel()">Cancel</button>
                    <button class="btn btn-info float-right mt-2" id="btnAssign">Select</button>
                </li>
            </ul>
        </div>
        <div class="card">
            <div class="card-header">
                Ticket History
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-sm-6">
                            <p class="text-muted mb-0">Help desk team</p>
                            <p class="mb-2"><strong class="Author">Alexander</strong></p>
                        </div>
                        <div class="col-sm-6">
                            <p class="text-muted mb-0">Joined Date</p>
                            <p class="mb-2"><strong class="Created">20 june 2020</strong></p>
                        </div>
                    </div>
                </li>

            </ul>
        </div>
    </div>
<div class="col-sm-9">
    <div class="card">
        <div class="card-header">
            Ticket Detail

        </div>

        <ul class="list-group list-group-flush" id="messageBody">
            @*<li class="list-group-item">
                    <h5 class="name">John : </h5>
                    <div class="card">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-sm-12">

                                        <p>Maecenas bibendum lorem sit amet nulla mollis consectetur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aenean placerat arcu orci, a tempor lorem tempor tempor.</p>

                                    </div>

                                </div>
                            </li>
                        </ul>
                    </div>
                </li>*@
        </ul>
    </div>
    <div class="row fixed-bottom form-message">
        <div class="offset-7 col-sm-5">
            <div class="card ">
                <form>
                    <div class="card-header">
                        <div class="row">
                            <div class="col-sm-3">
                                Message
                            </div>
                            <div class="offset-7 col-sm-2">
                                <button class="btn btn-danger" id="buttonMinimize">
                                    <i class="fa fa-window-minimize " aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="minimized">
                        <div class="card-body">
                            <div class="form-group">
                                <input type="text" class="form-control" id="messageContent">
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-outline-primary" id="buttonSendMessage">Send</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
</div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script>
        let Cancel = () => {
            // passing assign terakhir
            $("#inputRole").prop("selectedIndex", 0);
        }

        var ticketID = `@ViewData["ticketID"]`;
        var empID = `@ViewData["empId"]`;
        $(document).ready(function () {
            GetMessageByID(ticketID);
            GetTicket(ticketID);
/*            if ($("#TicketStatus").text(newResult.TicketStatus) == "Closed") {*/
                $(".form-message").hide();
           /* }*/

            $("#buttonSendMessage").click((e) => {
                e.preventDefault();
                e.stopPropagation();
                Send();
            });
            $("#buttonMinimize").click((e) => {
                e.preventDefault();
                e.stopPropagation();
                $("#minimized").toggle();
            });

        });

        let Send = () => {
            var model = new Object();
            model.TicketId = ticketID;
            model.EmployeeId = empID;
            model.Message = $("#messageContent").val();
            console.log(model);
            $.ajax({
                url: "https://localhost:44326/Dashboard/NewTicketMessage",
                type: 'POST',
                data: model,
            }).done((result) => {
                console.log(result)
                if (result == 200) {
                    swal(
                        {
                            title: "Success!",
                            text: "Message has been sent !",
                            icon: "success"
                        }).then(() => { location.reload() })
                }
            }).fail((error) => {
                console.log("error");
            })
        }
         $("#btnAssign").click(function (e) {
            Assign();
            e.preventDefault();
            e.stopPropagation();
        });

        let Assign = () => {
            var model = new Object();
            model.TicketId = ticketID;
            model.EmployeeId = $("#inputRole").val();
            console.log(model);
            $.ajax({
                url: "https://localhost:44326/Dashboard/AssignTicket",
                type: 'POST',
                data: model,
            }).done((result) => {
                console.log(result)
                if (result == 200) {
                    swal(
                        {
                            title: "Success!",
                            text: "Message has been sent !",
                            icon: "success"
                        }).then(() => { location.reload() })
                }
            }).fail((error) => {
                console.log("error");
            })
        }
        let GetMessageByID = (id) => {
            $.ajax({
                url: "https://localhost:44326/Dashboard/GetTicketMessage",
                type: 'GET',
                data: {id : id}
            }).done((result) => {
                //let newData = result.map((data) => {
                //    data.messageDate = data.messageDate.substr(0, 10);
                //    return data;
                //});
                console.log(result);
                result.forEach(myFunction);

                function myFunction(item) {
                    console.log(item);
                    var name = `<div class="row">
                                     <div class="col-sm-5">
                                        <p class="text-muted">Created  : ${moment(item.messageDate).format('DD MMMM YYYY HH:mm:ss')}</p>
                                     </div>
                                     <div class="col-sm-7">
                                        <p class="name text-muted">By - ${item.messageBy} </p>
                                     </div>
                                </div>
                              `
                    var card = `<div class="card">
                                    <ul class="list-group list-group-flush">
                                    <li class="list-group-item">
                                        <div class="row">
                                            <div class="col-sm-12">
                                               <p>${item.message}</p>
                                            </div>

                                        </div>
                                    </li>
                                </div>`
                    $("#messageBody").append(`<li class="list-group-item">${name} ${card}</li>`);
                }
            }).fail((error) => {
                console.log("error");
            })
        }

        function GetTicket(ticketId) {
            console.log(ticketId);
            $.ajax({
                type: 'GET',
                url: `https://localhost:44326/Dashboard/TicketDetailById/`,
                data: { ticketId: ticketId},
            }).done((result) => {
                newResult = JSON.parse(result);
                console.log("NEW RESULT");
                console.log(newResult);

                $("#Author").text(newResult.Author)
                $("#CreatedDate").text(moment(newResult.CreatedDate).format('DD MMMM YYYY HH:mm:ss'))
                $("#Category").text(newResult.Category)
                $("#TicketStatus").text(newResult.TicketStatus)
            }).fail((error) => {
                console.log(error);
            })
        }
    </script>
}